#!/bin/bash

set -e

ALL="prom etcd redis pages1 pages2 preso conf bal dash"
HIDE_FROM_SCOPE="-l works.weave.role=system"
CURL="docker run --rm --entrypoint=/usr/bin/curl weaveworks/weaveexec"

VERSION=${VERSION:-latest}

reg_service() {
    local C=$1
    local S=$2
    local IP=$(docker exec $C ip -f inet addr show dev ethwe | \
        grep -o 'inet [.0-9]*' | \
        cut -d ' ' -f 2)
    $CURL -sS -XPUT -d value='{"Port": 80, "IPAddress":"'$IP'"}' \
        http://etcd:4001/v2/keys/weave/service/$S/$C
}

do_up() {
    case $1 in
        "")
            for c in $ALL; do do_up $c; done
            ;;
        pages1)
            # pages service
            docker run -d --name pages1 \
                -e INSTANCE=pages1 \
                -e REDIS_SVC=redis.svc.weave.local \
                --hostname pages.weave.local micro-wiki/pages:$VERSION
            reg_service pages1 pages
            ;;
        pages2)
            # pages service, instance two please
            docker run -d --name pages2 \
                -e INSTANCE=pages2 \
                -e REDIS_SVC=redis.svc.weave.local \
                --hostname pages.weave.local micro-wiki/pages:$VERSION
            reg_service pages2 pages
            ;;
        preso)
            # preso front end
            docker run -d --name preso \
                -e PAGES_SVC=pages.svc.weave.local \
                -p 8080:80 --hostname preso.weave.local micro-wiki/preso
            ;;
        prom)
            # prometheus
            docker run -d --name prom \
                -v `pwd`/prom:/etc/prometheus -p 9090:9090 \
                $HIDE_FROM_SCOPE \
                prom/prometheus:master
            ;;
        redis)
            docker run -d --name redis \
                --hostname redis.svc.weave.local \
                litaio/redis
            ;;
        etcd)
            docker run -d --name etcd \
                -h etcd.weave.local \
                $HIDE_FROM_SCOPE \
                quay.io/coreos/etcd \
                -advertise-client-urls http://etcd:4001 \
                -listen-client-urls http://0.0.0.0:4001
            ;;
        conf)
            docker run -d --name conf \
                $HIDE_FROM_SCOPE \
                -v `pwd`/conf/haproxy.cfg.tmpl:/etc/confd/templates/haproxy.cfg.tmpl:ro \
                micro-wiki/conf
            ;;
        bal)
            docker run -d --name bal \
                -h pages.svc.weave.local \
                --volumes-from=conf \
                haproxy:1.5 haproxy -f /usr/local/etc/haproxy/haproxy.cfg -db
            ;;
        dash)
            docker run -d --name dash \
                -p 3000:3000 \
                -v `pwd`/dash:/var/lib/grafana \
                -v `pwd`/dash/grafana-plugins/datasources/prometheus:/usr/share/grafana/public/app/plugins/datasource/prometheus \
                -e DATABASE_URL=sqlite3:/tmp/prom/file.sqlite3 \
                grafana/grafana:2.1.3
            ;;
        *)
            echo "Sorry which service?" >&2
    esac
}

do_down() {
#    docker rm -f etcd
    if [ -z "$1" ]; then
        docker rm -f $ALL || true
    else
        docker rm -f $1 || true
    fi
}

do_load() {
    docker rm -f load
    docker run --name load micro-wiki/load
}

case $1 in
    up)
        do_up $2
        ;;
    down)
        do_down $2
        ;;
    restart)
        do_down $2
        do_up $2
        ;;
    load)
        do_load
        ;;
    *)
        echo Unrecognised command "$1"
        ;;
esac
